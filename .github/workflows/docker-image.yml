name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Prepare
      if: success()
      id: prepare
      run: |
          DOCKER_IMAGE=nmartin867/expss
          DOCKER_PLATFORMS=linux/amd64
          VERSION=edge
          echo "docker_image=${DOCKER_IMAGE}" >> $GITHUB_OUTPUT
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "buildx_args=--platform ${DOCKER_PLATFORMS} \
            --build-arg VERSION=${VERSION} \
            --build-arg BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ') \
            --build-arg VCS_REF=${GITHUB_SHA::8} \
            --file ./Dockerfile ./" >> $GITHUB_OUTPUT

    - name: Docker Buildx Setup
      id: buildx
      uses: crazy-max/ghaction-docker-buildx@v3
      with:
        buildx-version: 'latest'
        qemu-version: 'latest'

    - name: Available platforms
      run: echo ${{ steps.buildx.outputs.platforms }}

    - name: Docker Buildx (build)
      if: success() && github.event_name != 'pull_request'
      run: |
        docker buildx build --output "type=image,push=false" ${{ steps.prepare.outputs.buildx_args }}
            
    - name: Docker Login
      if: success() && github.event_name != 'pull_request'
      uses: docker/login-action@v1
      with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Docker Buildx (push)
      if: success() && github.event_name != 'pull_request'
      run: |
        docker buildx build --output "type=image,push=true" ${{ steps.prepare.outputs.buildx_args }}

      
      
